# Docker Compose –¥–ª—è Dokploy - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã: –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –¥–µ–ø–ª–æ–µ + –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞

version: '3.8'

services:
  rosseti-parser:
    build:
      context: .
      dockerfile: Dockerfile
    
    # üî• –ö–†–ò–¢–ò–ß–ù–û: –£–±–∏—Ä–∞–µ–º container_name –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ Dokploy
    # container_name –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Dokploy
    
    restart: unless-stopped
    
    environment:
      - NODE_ENV=production
      - TZ=Europe/Moscow
      # üî• –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –±–æ—Ç–∞
      - BOT_INSTANCE_ID=${COMPOSE_PROJECT_NAME:-rosseti}_parser
    
    env_file:
      - .env
    
    # üî• Volumes —Å–æ–≥–ª–∞—Å–Ω–æ Dokploy –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    volumes:
      # Volume Mount - —É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ Docker volumes
      - data_volume:/app/data
      - logs_volume:/app/logs  
      - reports_volume:/app/reports
      - playwright_volume:/home/botuser/.cache/ms-playwright
    
    # Resources —Å–æ–≥–ª–∞—Å–Ω–æ Dokploy –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    deploy:
      # üî• –í–∞–∂–Ω–æ –¥–ª—è Dokploy: –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.1'
      
      # üî• –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
      replicas: 1
      
      # Restart Policy –¥–ª—è Dokploy Swarm
      restart_policy:
        condition: unless-stopped
        delay: 10s
        max_attempts: 3
        window: 60s
    
    # Health Check —Å–æ–≥–ª–∞—Å–Ω–æ Dokploy
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Bot is running')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    # Logging –¥–ª—è Dokploy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        
    # üî• Labels –¥–ª—è Dokploy (–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã)
    labels:
      - "dokploy.service=rosseti-parser"
      - "dokploy.backup=true"
      - "dokploy.backup.schedule=daily"

  # üîß API —Å–µ—Ä–≤–∏—Å - –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é
  rosseti-api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: "no"  # –ù–µ –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç
    
    environment:
      - NODE_ENV=production
      - TZ=Europe/Moscow
      - BOT_INSTANCE_ID=${COMPOSE_PROJECT_NAME:-rosseti}_api
    
    env_file:
      - .env
    
    volumes:
      - data_volume:/app/data
      - logs_volume:/app/logs
      - reports_volume:/app/reports
      - playwright_volume:/home/botuser/.cache/ms-playwright
    
    command: ["api"]
    
    # Ports –¥–ª—è Dokploy (–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –≤ –ø–∞–Ω–µ–ª–∏)
    ports:
      - "3000:3000"
    
    # Profile –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    profiles:
      - api
      
    labels:
      - "dokploy.service=rosseti-api"

# üî• Volumes –¥–ª—è Dokploy - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ volumes
volumes:
  # –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–±–∞–∑–∞ –ø–æ–¥–ø–∏—Å–æ–∫) - –ö–†–ò–¢–ò–ß–ù–û
  data_volume:
    driver: local
    labels:
      - "dokploy.backup=true"
      - "dokploy.backup.schedule=daily"
      - "dokploy.persistent=true"  # –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–π
  
  # –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  logs_volume:
    driver: local
    labels:
      - "dokploy.backup=true"
      - "dokploy.backup.schedule=weekly"
      - "dokploy.persistent=true"
  
  # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã
  reports_volume:
    driver: local
    labels:
      - "dokploy.backup=true"
      - "dokploy.backup.schedule=weekly"
      - "dokploy.persistent=true"
    
  # –ö–µ—à Playwright
  playwright_volume:
    driver: local
    labels:
      - "dokploy.persistent=true"

# üî• Network –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ –≤ Dokploy
networks:
  default:
    name: ${COMPOSE_PROJECT_NAME:-rosseti}-network
    labels:
      - "dokploy.network=true"
