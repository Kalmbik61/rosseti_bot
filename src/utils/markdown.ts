/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Markdown –æ—Ç—á–µ—Ç–æ–≤
 */

import { MY_PLACE } from "../config.js";
import type { PowerOutageInfo } from "./types.js";

/**
 * –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è Telegram Markdown
 */
export function escapeMarkdownV2(text: string): string {
  // –°–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ MarkdownV2
  const specialChars = /([_*\[\]()~`>#+=|{}.!-])/g;
  return text.replace(specialChars, "\\$1");
}

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ Markdown (–∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –±–æ—Ç–µ)
 */
export function escapeMarkdown(text: string): string {
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å –≤ –±–∞–∑–æ–≤–æ–º Markdown
  return text
    .replace(/\*/g, "\\*")
    .replace(/_/g, "\\_")
    .replace(/\[/g, "\\[")
    .replace(/\]/g, "\\]")
    .replace(/\(/g, "\\(")
    .replace(/\)/g, "\\)")
    .replace(/~/g, "\\~")
    .replace(/`/g, "\\`")
    .replace(/>/g, "\\>")
    .replace(/#/g, "\\#")
    .replace(/\+/g, "\\+")
    .replace(/=/g, "\\=")
    .replace(/\|/g, "\\|")
    .replace(/\{/g, "\\{")
    .replace(/\}/g, "\\}")
    .replace(/\./g, "\\.")
    .replace(/!/g, "\\!");
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏—è—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown
 */
export function createPowerOutageMarkdownReport(
  outages: PowerOutageInfo[]
): string {
  const now = new Date();
  const dateStr = now.toLocaleDateString("ru-RU");
  const timeStr = now.toLocaleTimeString("ru-RU");

  let markdown = `# –û—Ç—á–µ—Ç –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏—è—Ö —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏–∏\n\n`;
  markdown += `**–î–∞—Ç–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞:** ${dateStr} ${timeStr}\n`;
  markdown += `**–ü–æ–∏—Å–∫ –ø–æ –º–µ—Å—Ç—É:** ${MY_PLACE}\n`;
  markdown += `**–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π:** ${outages.length}\n\n`;

  if (outages.length === 0) {
    markdown += `‚ùå –î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏—è—Ö –¥–ª—è ${MY_PLACE} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.\n`;
    return markdown;
  }

  markdown += `## –¢–∞–±–ª–∏—Ü–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏–π\n\n`;

  // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
  markdown += `| ‚Ññ | –†–∞–π–æ–Ω | –ú–µ—Å—Ç–æ | –ê–¥—Ä–µ—Å–∞ | –î–∞—Ç–∞/–≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ | –î–∞—Ç–∞/–≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è | –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–Ω–µ—Ä–≥–∏–∏ |\n`;
  markdown += `|---|-------|-------|--------|-------------------|---------------------|---------------------|\n`;

  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  outages.forEach((outage, index) => {
    const num = index + 1;
    const district = outage.district || "-";
    const place = outage.place || "-";
    const addresses = outage.addresses || "-";
    const dateFrom = outage.dateFrom || "-";
    const dateTo = outage.dateTo || "-";
    const energy = outage.energy || "-";

    markdown += `| ${num} | ${district} | ${place} | ${addresses} | ${dateFrom} | ${dateTo} | ${energy} |\n`;
  });

  markdown += `\n## –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n`;
  markdown += `- **–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏–π:** ${outages.length}\n`;

  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞–π–æ–Ω–∞–º
  const districtStats = outages.reduce((acc, outage) => {
    const district = outage.district || "–ù–µ —É–∫–∞–∑–∞–Ω";
    acc[district] = (acc[district] || 0) + 1;
    return acc;
  }, {} as Record<string, number>);

  markdown += `- **–ü–æ —Ä–∞–π–æ–Ω–∞–º:**\n`;
  Object.entries(districtStats).forEach(([district, count]) => {
    markdown += `  - ${district}: ${count} –∑–∞–ø–∏—Å–µ–π\n`;
  });

  markdown += `\n---\n`;
  markdown += `*–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏—Å—Ç–µ–º–æ–π –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏–π*\n`;

  return markdown;
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –≤ —Ñ–∞–π–ª .md
 */
export async function savePowerOutageReport(
  outages: PowerOutageInfo[],
  filename?: string
): Promise<string> {
  const fs = await import("fs/promises");
  const path = await import("path");

  // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –ø–∞–ø–∫–∞ reports —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  const reportsDir = path.resolve("reports");
  await fs.mkdir(reportsDir, { recursive: true });

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ
  if (!filename) {
    const now = new Date();
    const dateStr = now.toISOString().slice(0, 10); // YYYY-MM-DD
    const timeStr = now.toTimeString().slice(0, 8).replace(/:/g, "-"); // HH-MM-SS
    filename = `power-outages-report-${dateStr}-${timeStr}.md`;
  }

  // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —Ñ–∞–π–ª –∏–º–µ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .md
  if (!filename.endsWith(".md")) {
    filename += ".md";
  }

  const markdown = createPowerOutageMarkdownReport(outages);
  const fullPath = path.join(reportsDir, filename);

  await fs.writeFile(fullPath, markdown, "utf-8");

  console.log(`üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: ${fullPath}`);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏—è—Ö –≤ –ë–î
  try {
    const { DatabaseManager } = await import("./database.js");
    const db = new DatabaseManager();
    await db.initialize();

    const savedCount = db.saveOutages(outages, filename);
    if (savedCount > 0) {
      console.log(`üìä –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î: ${savedCount} –Ω–æ–≤—ã—Ö –æ—Ç–∫–ª—é—á–µ–Ω–∏–π`);
    }

    db.close();
  } catch (error) {
    console.error("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –ë–î:", error);
    // –ù–µ –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É, —Ç–∞–∫ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞) –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
  }

  // –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–æ—Ç–∞—Ü–∏—é –æ—Ç—á–µ—Ç–æ–≤ (—Å–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞–∫—Å–∏–º—É–º 10 —Ñ–∞–π–ª–æ–≤)
  try {
    const { rotateReports } = await import("./fileUtils.js");
    await rotateReports(10);
  } catch (error) {
    console.error("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–æ—Ç–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤:", error);
    // –ù–µ –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É, —Ç–∞–∫ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ) –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
  }

  return fullPath;
}
