/**
 * –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏–π
 */

import { PowerOutageBot } from "./telegramBot.js";
import { logger } from "./utils/index.js";
import { BOT_TOKEN } from "./config.js";
import fs from "fs";
import path from "path";

if (!BOT_TOKEN) {
  console.error(
    "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
  );
  console.log("\nüìã –°–ø–æ—Å–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–æ–∫–µ–Ω–∞:");
  console.log("1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –¥–æ–±–∞–≤—å—Ç–µ:");
  console.log("   TELEGRAM_BOT_TOKEN=your_bot_token_here");
  console.log("2. –ò–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é:");
  console.log("   export TELEGRAM_BOT_TOKEN=your_bot_token_here");
  console.log("\nüí° –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –≤ Telegram");
  process.exit(1);
}

// üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞
const INSTANCE_ID = process.env.BOT_INSTANCE_ID || "default";
const LOCK_FILE = path.join(process.cwd(), "data", `.bot_lock_${INSTANCE_ID}`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –±–æ—Ç
if (fs.existsSync(LOCK_FILE)) {
  try {
    const lockContent = fs.readFileSync(LOCK_FILE, "utf8");
    const { pid, startTime } = JSON.parse(lockContent);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
    try {
      process.kill(pid, 0); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —É–±–∏–π—Å—Ç–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
      console.error(
        `‚ùå –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω —Å PID ${pid} (instance: ${INSTANCE_ID})`
      );
      console.log("üîç –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞, —É–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:");
      console.log(`   rm ${LOCK_FILE}`);
      process.exit(1);
    } catch (error) {
      // –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π lock —Ñ–∞–π–ª
      logger.info(`–£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π lock —Ñ–∞–π–ª –¥–ª—è PID ${pid}`);
      fs.unlinkSync(LOCK_FILE);
    }
  } catch (error) {
    // –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π lock —Ñ–∞–π–ª, —É–¥–∞–ª—è–µ–º
    fs.unlinkSync(LOCK_FILE);
  }
}

// –°–æ–∑–¥–∞–µ–º lock —Ñ–∞–π–ª
const lockData = {
  pid: process.pid,
  startTime: new Date().toISOString(),
  instanceId: INSTANCE_ID,
  botToken: BOT_TOKEN.substring(0, 10) + "...", // –ß–∞—Å—Ç–∏—á–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
};

fs.mkdirSync(path.dirname(LOCK_FILE), { recursive: true });
fs.writeFileSync(LOCK_FILE, JSON.stringify(lockData, null, 2));

logger.info(
  `üîí –°–æ–∑–¥–∞–Ω lock —Ñ–∞–π–ª –¥–ª—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ ${INSTANCE_ID} (PID: ${process.pid})`
);

// –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
const bot = new PowerOutageBot(BOT_TOKEN);

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ lock —Ñ–∞–π–ª–∞
const cleanupLockFile = () => {
  try {
    if (fs.existsSync(LOCK_FILE)) {
      fs.unlinkSync(LOCK_FILE);
      logger.info(`üîì Lock —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω: ${LOCK_FILE}`);
    }
  } catch (error) {
    logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ lock —Ñ–∞–π–ª–∞:", error);
  }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on("SIGINT", () => {
  console.log("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...");
  bot.stop();
  cleanupLockFile();
  process.exit(0);
});

process.on("SIGTERM", () => {
  console.log("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...");
  bot.stop();
  cleanupLockFile();
  process.exit(0);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on("unhandledRejection", (reason, promise) => {
  logger.error("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ Promise:", reason);
  console.error("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ Promise:", reason);
});

process.on("uncaughtException", (error) => {
  logger.error("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:", error);
  console.error("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:", error);
  bot.stop();
  cleanupLockFile();
  process.exit(1);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
console.log("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏–π...");
logger.info("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞");

try {
  bot.start();
  console.log("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.");
} catch (error) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:", error);
  logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:", error);
  process.exit(1);
}
